name: Java CI with Maven
run-name: Docker Build and Push to ${{ inputs.environment }}

on:
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy to'
        required: true
        default: 'Test'
        type: choice
        options:
          - Test
          - Int
          - E2E
          - Prod
      tag:
        description: 'Tag name for the docker image'
        required: false
        default: 'latest'
        type: string

env:
 image_name: academy
 tag_name: "${{ inputs.tag }}-${{ inputs.environment }}"
 artifact_name: artifact

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: academy
          POSTGRES_USER: academy
          POSTGRES_DB: "postgres"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Call Maven Build
      uses: ./.github/actions/maven_build

    - name: Call Docker Build
      uses: ./.github/actions/docker_build
      with:
        tag_name: ${{ env.tag_name }}
        image_name: ${{ env.image_name }}
      
    - name: Save Docker Image
      run: |
        docker save -o ${{ env.image_name }}.tar ${{ env.image_name }}:${{ env.tag_name }}
    
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ env.artifact_name }}
        path: "${{ env.image_name }}.tar"

  push:
    runs-on: ubuntu-latest
    needs: build

    environment: ${{ inputs.environment }} 

    steps:
    - uses: actions/checkout@v4
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.artifact_name }}
    
    - name: Load Docker Image
      run: |
        docker load -i ${{ env.image_name }}.tar

    - name: List Docker Images
      run: |
        docker image ls

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Docker Push
      uses: ./.github/actions/docker_push 
      with:
        docker_username: ${{ secrets.DOCKERHUB_USERNAME }}
        docker_image: ${{ env.image_name }}:${{ env.tag_name }}